<?xml version="1.0" encoding="UTF-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{69A2078F-53A7-377B-A15A-0F9055032046}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>cryptopp-object</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\masm.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">cryptopp-object.dir\Debug\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">cryptopp-object.dir\Debug\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">cryptopp-object</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.lib</TargetExt>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">cryptopp-object.dir\Release\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">cryptopp-object.dir\Release\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">cryptopp-object</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.lib</TargetExt>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">cryptopp-object.dir\MinSizeRel\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">cryptopp-object.dir\MinSizeRel\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">cryptopp-object</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">.lib</TargetExt>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">cryptopp-object.dir\RelWithDebInfo\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">cryptopp-object.dir\RelWithDebInfo\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">cryptopp-object</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">.lib</TargetExt>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;COMMPROTO_DEBUG;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;COMMPROTO_DEBUG;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <MASM>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;COMMPROTO_DEBUG;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <IncludePaths>%(IncludePaths)</IncludePaths>
    </MASM>
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;COMMPROTO_DEBUG;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat></DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;COMMPROTO_DEBUG;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <MASM>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;COMMPROTO_DEBUG;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <IncludePaths>%(IncludePaths)</IncludePaths>
    </MASM>
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;COMMPROTO_DEBUG;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat></DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;COMMPROTO_DEBUG;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <MASM>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;COMMPROTO_DEBUG;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <IncludePaths>%(IncludePaths)</IncludePaths>
    </MASM>
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;COMMPROTO_DEBUG;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;COMMPROTO_DEBUG;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <MASM>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;COMMPROTO_DEBUG;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <IncludePaths>%(IncludePaths)</IncludePaths>
    </MASM>
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule C:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master/Encryption/cryptopp563/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -HC:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master -BC:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master/libxbee3 --check-stamp-file C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\Encryption\cryptopp563\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master/Encryption/cryptopp563/CMakeLists.txt;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\CMakeLists.txt;C:\Program Files\CMake\share\cmake-3.7\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\TestBigEndian.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckTypeSize.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFileCXX.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckTypeSize.c.in;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\CMakeFiles\CheckTypeSize\CMAKE_SIZEOF_UNSIGNED_SHORT.c;C:\Program Files\CMake\share\cmake-3.7\Modules\TestEndianess.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineASM_MASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineCompilerId.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeCompilerIdDetection.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeFindBinUtils.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeASMCompiler.cmake.in;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\CMakeFiles\3.7.1\CMakeASM_MASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeASM_MASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeTestASM_MASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeTestASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\Encryption\cryptopp563\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule C:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master/Encryption/cryptopp563/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -HC:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master -BC:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master/libxbee3 --check-stamp-file C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\Encryption\cryptopp563\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master/Encryption/cryptopp563/CMakeLists.txt;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\CMakeLists.txt;C:\Program Files\CMake\share\cmake-3.7\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\TestBigEndian.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckTypeSize.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFileCXX.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckTypeSize.c.in;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\CMakeFiles\CheckTypeSize\CMAKE_SIZEOF_UNSIGNED_SHORT.c;C:\Program Files\CMake\share\cmake-3.7\Modules\TestEndianess.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineASM_MASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineCompilerId.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeCompilerIdDetection.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeFindBinUtils.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeASMCompiler.cmake.in;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\CMakeFiles\3.7.1\CMakeASM_MASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeASM_MASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeTestASM_MASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeTestASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\Encryption\cryptopp563\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule C:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master/Encryption/cryptopp563/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -HC:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master -BC:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master/libxbee3 --check-stamp-file C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\Encryption\cryptopp563\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master/Encryption/cryptopp563/CMakeLists.txt;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\CMakeLists.txt;C:\Program Files\CMake\share\cmake-3.7\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\TestBigEndian.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckTypeSize.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFileCXX.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckTypeSize.c.in;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\CMakeFiles\CheckTypeSize\CMAKE_SIZEOF_UNSIGNED_SHORT.c;C:\Program Files\CMake\share\cmake-3.7\Modules\TestEndianess.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineASM_MASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineCompilerId.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeCompilerIdDetection.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeFindBinUtils.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeASMCompiler.cmake.in;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\CMakeFiles\3.7.1\CMakeASM_MASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeASM_MASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeTestASM_MASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeTestASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\Encryption\cryptopp563\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule C:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master/Encryption/cryptopp563/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -HC:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master -BC:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master/libxbee3 --check-stamp-file C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\Encryption\cryptopp563\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master/Encryption/cryptopp563/CMakeLists.txt;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\CMakeLists.txt;C:\Program Files\CMake\share\cmake-3.7\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\TestBigEndian.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckTypeSize.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFileCXX.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckTypeSize.c.in;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\CMakeFiles\CheckTypeSize\CMAKE_SIZEOF_UNSIGNED_SHORT.c;C:\Program Files\CMake\share\cmake-3.7\Modules\TestEndianess.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineASM_MASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeDetermineCompilerId.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeCompilerIdDetection.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeFindBinUtils.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeASMCompiler.cmake.in;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\CMakeFiles\3.7.1\CMakeASM_MASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeASM_MASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeTestASM_MASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeTestASMCompiler.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.7\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.7\Modules\CMakeParseArguments.cmake;C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\libxbee3\Encryption\cryptopp563\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\cryptlib.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\cpu.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\3way.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\adler32.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\algebra.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\algparam.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\arc4.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\asn.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\authenc.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\base32.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\base64.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\basecode.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\bfinit.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\blowfish.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\blumshub.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\camellia.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\cast.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\casts.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\cbcmac.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\ccm.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\channels.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\cmac.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\crc.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\default.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\des.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\dessp.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\dh.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\dh2.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\dll.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\dsa.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\eax.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\ec2n.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\eccrypto.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\ecp.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\elgamal.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\emsa2.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\eprecomp.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\esign.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\files.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\filters.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\fips140.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\gcm.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\gf256.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\gf2_32.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\gf2n.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\gfpcrypt.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\gost.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\gzip.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\hex.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\hmac.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\hrtimer.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\ida.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\idea.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\integer.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\iterhash.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\luc.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\mars.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\marss.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\md2.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\md4.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\md5.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\misc.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\modes.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\mqueue.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\mqv.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\nbtheory.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\network.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\oaep.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\osrng.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\panama.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\pkcspad.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\polynomi.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\pssr.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\pubkey.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\queue.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\rabin.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\randpool.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\rc2.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\rc5.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\rc6.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\rdrand.cpp" >
      <ObjectFileName>$(IntDir)/rdrand.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\rdtables.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\rijndael.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\ripemd.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\rng.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\rsa.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\rw.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\safer.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\salsa.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\seal.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\seed.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\serpent.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\sha.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\sha3.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\shacal2.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\shark.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\sharkbox.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\skipjack.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\socketft.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\sosemanuk.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\square.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\squaretb.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\strciphr.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\tea.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\tftables.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\tiger.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\tigertab.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\trdlocal.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\ttmac.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\twofish.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\vmac.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\wait.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\wake.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\whrlpool.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\xtr.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\xtrcrypt.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\zdeflate.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\zinflate.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\zlib.cpp"  />
    <ClCompile Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\winpipes.cpp"  />
    <MASM Include="C:\Users\amari\Documents\gcs\code\gcs\CommProtocol\CommProtocol-master\Encryption\cryptopp563\rdrand.asm" >
      <ObjectFileName>$(IntDir)/rdrand.asm.obj</ObjectFileName>
      <AdditionalOptions Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"> /safeseh %(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">_M_X86;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalOptions Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"> /safeseh %(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">_M_X86;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalOptions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"> /safeseh %(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">_M_X86;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalOptions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"> /safeseh %(AdditionalOptions)</AdditionalOptions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">_M_X86;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </MASM>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:/Users/amari/Documents/gcs/code/gcs/CommProtocol/CommProtocol-master/libxbee3/ZERO_CHECK.vcxproj">
      <Project>2B5B211D-3FD7-3161-B13A-685A52F63DA0</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\masm.targets" />
  </ImportGroup>
</Project>